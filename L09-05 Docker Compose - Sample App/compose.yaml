services:

# backend service
  backend:
    build:
      args:
      - NODE_ENV=development
      context: backend # points to backend sub folder
    command: npm run start-watch
    environment:
      - DATABASE_DB=example
      - DATABASE_USER=root
      - DATABASE_PASSWORD=/run/secrets/db-password
      - DATABASE_HOST=db
      - NODE_ENV=development
    ports:
      - 3001:80
      - 9229:9229
      - 9230:9230
    secrets:
      - db-password
    volumes:
      - ./backend/src:/code/src:ro
      - ./backend/package.json:/code/package.json
      - ./backend/package-lock.json:/code/package-lock.json
      - backend-modules:/opt/app/node_modules
    networks: # backend service can communicate directly with both frontend and db services
      - public
      - private 
    depends_on:
      - db
    restart: unless-stopped


# db service
  db:
    image: mariadb:10.6.4-focal # pulls the db image from Docker Hub
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - private # db service can communicate directly with backend service but not with frontend service
    environment:
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password


# frontend service
  frontend:
    build:
      context: frontend # points to frontend sub folder
      target: development
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    networks:
      - public # frontend service can communicate directly with backend service but not with db service
    depends_on:
      - backend
    restart: unless-stopped
networks:
  public:
  private:
volumes:
  backend-modules:
  db-data:
secrets:
  db-password:
    file: db/password.txt
